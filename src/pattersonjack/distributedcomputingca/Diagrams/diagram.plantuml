@startuml

!theme plain
top to bottom direction
skinparam linetype ortho
skinparam nodesep 50

class Command {
  + Command(String, int): 
  - prefix: String
  - argumentsCount: int
  + execute(SMPMessage, SMPServerThread): SMPMessage
}
class CommandService {
  + CommandService(): 
  + parseText(String): SMPMessage
  - initializeCommands(): void
  + parseCommand(SMPMessage): Command
}
class GetMessageCommand {
  + GetMessageCommand(String, int): 
  + execute(SMPMessage, SMPServerThread): SMPMessage
}
entity HostData << record >> {
  + HostData(String, int): 
  + hostname(): String
  + port(): int
}
class LoginCommand {
  + LoginCommand(String, int): 
  + execute(SMPMessage, SMPServerThread): SMPMessage
}
class LogoutCommand {
  + LogoutCommand(String, int): 
  + execute(SMPMessage, SMPServerThread): SMPMessage
}
class RunSMPClientCli {
  + RunSMPClientCli(): 
  + main(String[]): void
  - runCli(SMPClient, BufferedReader): void
  - getHostData(BufferedReader): HostData
}
class RunSMPClientGui {
  + RunSMPClientGui(): 
  - showHelp(): void
  - connectToServer(ActionEvent): void
  + main(String[]): void
  - constructSMPPanel(): JPanel
  - createGUI(): void
  - constructParentPanel(): JPanel
  - constructConnectPanel(): JPanel
  - sendMessage(ActionEvent): void
}
class RunSMPServer {
  + RunSMPServer(): 
  + main(String[]): void
}
class SMPClient {
  + SMPClient(HostData): 
  + receiveMessage(): SMPMessage
  - initializeSSLContext(SSLContext): void
  - getSSLSocket(HostData): SSLSocket
  + sendMessage(String): void
}
entity SMPMessage << record >> {
  + SMPMessage(int, String, String): 
  + message(): String
  + command(): String
  + toString(): String
  + statusCode(): int
}
class SMPServer {
  + SMPServer(CommandService, int): 
  - serverPort: int
  + run(): void
  - createNewThread(SMPSocket): Thread
  - waitForAndReceiveConnection(SSLServerSocket): SMPSocket
  - initializeSSLContext(SSLContext): void
}
class SMPServerThread {
  + SMPServerThread(SMPServer, SMPSocket, CommandService): 
  - server: SMPServer
  - socket: SMPSocket
  - isLoggedIn: boolean
  ~ loggedOff: boolean
  - commandService: CommandService
  - messages: ArrayList<String>
  + setIsLoggedIn(boolean): void
  + run(): void
  - getResponse(Command, SMPMessage): SMPMessage
}
class SMPSocket {
  + SMPSocket(SSLSocket): 
  + closeConnection(): void
  - setStreams(): void
  + sendMessage(SMPMessage): void
  + receiveMessage(): SMPMessage
}
class UploadMessageCommand {
  + UploadMessageCommand(String, int): 
  + execute(SMPMessage, SMPServerThread): SMPMessage
}

CommandService       "1" *-[#595959,plain]-> "commands\n*" Command              
CommandService        -[#595959,dashed]->  GetMessageCommand    : "«create»"
CommandService        -[#595959,dashed]->  LoginCommand         : "«create»"
CommandService        -[#595959,dashed]->  LogoutCommand        : "«create»"
CommandService        -[#595959,dashed]->  SMPMessage           : "«create»"
CommandService        -[#595959,dashed]->  UploadMessageCommand : "«create»"
GetMessageCommand     -[#000082,plain]-^  Command              
GetMessageCommand     -[#595959,dashed]->  SMPMessage           : "«create»"
LoginCommand          -[#000082,plain]-^  Command              
LoginCommand          -[#595959,dashed]->  SMPMessage           : "«create»"
LogoutCommand         -[#000082,plain]-^  Command              
LogoutCommand         -[#595959,dashed]->  SMPMessage           : "«create»"
RunSMPClientCli       -[#595959,dashed]->  HostData             : "«create»"
RunSMPClientCli       -[#595959,dashed]->  SMPClient            : "«create»"
RunSMPClientGui       -[#595959,dashed]->  HostData             : "«create»"
RunSMPClientGui      "1" *-[#595959,plain]-> "client\n1" SMPClient            
RunSMPClientGui       -[#595959,dashed]->  SMPClient            : "«create»"
RunSMPServer          -[#595959,dashed]->  CommandService       : "«create»"
RunSMPServer          -[#595959,dashed]->  SMPServer            : "«create»"
SMPClient             -[#595959,dashed]->  CommandService       : "«create»"
SMPClient            "1" *-[#595959,plain]-> "commandService\n1" CommandService       
SMPClient            "1" *-[#595959,plain]-> "socket\n1" SMPSocket            
SMPClient             -[#595959,dashed]->  SMPSocket            : "«create»"
SMPServer            "1" *-[#595959,plain]-> "commandService\n1" CommandService       
SMPServer             -[#595959,dashed]->  SMPServerThread      : "«create»"
SMPServer             -[#595959,dashed]->  SMPSocket            : "«create»"
SMPServerThread      "1" *-[#595959,plain]-> "commandService\n1" CommandService       
SMPServerThread       -[#595959,dashed]->  SMPMessage           : "«create»"
SMPServerThread      "1" *-[#595959,plain]-> "server\n1" SMPServer            
SMPServerThread      "1" *-[#595959,plain]-> "socket\n1" SMPSocket            
UploadMessageCommand  -[#000082,plain]-^  Command              
UploadMessageCommand  -[#595959,dashed]->  SMPMessage           : "«create»"
@enduml
